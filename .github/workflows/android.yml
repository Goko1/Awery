name: Artifact Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Beta APK
      run: ./gradlew assembleBetaModernRelease

    - name: Build Production APK
      run: ./gradlew assembleProdModernRelease

    - name: Build Legacy Beta APK
      run: ./gradlew assembleBetaLegacyRelease

    - name: Build Legacy Production APK
      run: ./gradlew assembleProdLegacyRelease

    # List directory contents to debug paths
    - name: List build outputs
      run: |
        echo "Listing app/build/outputs/apk/betaModern/release"
        ls -R app/build/outputs/apk/betaModern/release || echo "Directory not found"
        
        echo "Listing app/build/outputs/apk/prodModern/release"
        ls -R app/build/outputs/apk/prodModern/release || echo "Directory not found"
        
        echo "Listing app/build/outputs/apk/betaLegacy/release"
        ls -R app/build/outputs/apk/betaLegacy/release || echo "Directory not found"
        
        echo "Listing app/build/outputs/apk/prodLegacy/release"
        ls -R app/build/outputs/apk/prodLegacy/release || echo "Directory not found"

    - name: Upload Beta APK
      uses: actions/upload-artifact@v4
      with:
        name: "Beta APK"
        retention-days: 90
        path: "app/build/outputs/apk/betaModern/release/app-beta-modern-release-signed.apk"

    - name: Upload Legacy Beta APK
      uses: actions/upload-artifact@v4
      with:
        name: "Legacy Beta APK"
        retention-days: 90
        path: "app/build/outputs/apk/betaLegacy/release/app-beta-legacy-release-signed.apk"

    - name: Get Commit Messages
      id: commit_message
      run: |
        commits=$(git log -1 --pretty=format:"%s" $GITHUB_SHA)
        echo "::set-output name=commits::$commits"

    - name: Send Beta APK to Telegram
      run: |
        curl -F document=@app/build/outputs/apk/betaModern/release/app-beta-modern-release-signed.apk \
             -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
             -F caption="New Beta APK\nCommits:\n${{ steps.commit_message.outputs.commits }}" \
             https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument

    - name: Send Legacy Beta APK to Telegram
      run: |
        curl -F document=@app/build/outputs/apk/betaLegacy/release/app-beta-legacy-release-signed.apk \
             -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
             -F caption="New Legacy Beta APK\nCommits:\n${{ steps.commit_message.outputs.commits }}" \
             https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument

    - name: Send Beta APK to Discord
      run: |
        commit_messages=${{ steps.commit_message.outputs.commits }}
        curl -F "payload_json={\"content\": \"New Beta APK\nCommits:\n${commit_messages}\"}" \
             -F "file1=@app/build/outputs/apk/betaModern/release/app-beta-modern-release-signed.apk" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Send Legacy Beta APK to Discord
      run: |
        commit_messages=${{ steps.commit_message.outputs.commits }}
        curl -F "payload_json={\"content\": \"New Legacy Beta APK\nCommits:\n${commit_messages}\"}" \
             -F "file1=@app/build/outputs/apk/betaLegacy/release/app-beta-legacy-release-signed.apk" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
