name: Artifact Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Beta APK
        run: ./gradlew assembleBetaModernRelease

      - name: Build Production APK
        run: ./gradlew assembleProdModernRelease

      - name: Build Legacy Beta APK
        run: ./gradlew assembleBetaLegacyRelease

      - name: Build Legacy Production APK
        run: ./gradlew assembleProdLegacyRelease

      - name: Get Commit Messages
        id: commit_message
        run: |
          REPO_URL="https://github.com/${{ github.repository }}"
          commit_id=$(git log -1 --pretty=format:"[%h]($REPO_URL/commit/%H)")
          author=$(git log -1 --pretty=format:"%an")
          author_profile="https://github.com/$author"
          message=$(git log -1 --pretty=format:"%s")
          COMMIT="Commit: $commit_id by [$author]($author_profile)\nMessage: $message"
          echo "::set-output name=Commit::$COMMIT"

      - name: Send Beta APK to Telegram
        if: always()
        run: |
         commit_message="${{ steps.commit_message.outputs.Commit }}"
         commit_message="${commit_message// /%20}" # Replace spaces with %20 for URL
         commit_message="${commit_message//$'\n'/}" # Remove newlines
         commit_message="${commit_message//$'\r'/}" # Remove carriage returns
         commit_url=$(echo "$commit_message" | grep -o '\[.*\]' | tr -d '[]')
         caption="{{ secrets.TELEGRAM_ROLE_ID }}\n[Commit Details]($commit_url)"
         curl -F document=@app/build/outputs/apk/betaModern/release/app-beta-modern-release.apk \
         -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
         -F caption="$caption" \
         https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument

      - name: Send Legacy Beta APK to Telegram
        if: always()
        run: |
          curl -F document=@app/build/outputs/apk/betaLegacy/release/app-beta-legacy-release.apk \
               -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
               https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument

      - name: Send Beta APK to Discord
        if: always()
        run: |
          commit_messages=$(echo -e "${{ steps.commit_message.outputs.Commit }}")
          payload=$(jq -nc --arg content "<@&1246876742568644720>\n$commit_messages" '{content: $content}')
          curl -F "payload_json=$payload" \
               -F "file1=@app/build/outputs/apk/betaModern/release/app-beta-modern-release.apk" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Legacy Beta APK to Discord
        if: always()
        run: |
          curl -F "file1=@app/build/outputs/apk/betaLegacy/release/app-beta-legacy-release.apk" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
